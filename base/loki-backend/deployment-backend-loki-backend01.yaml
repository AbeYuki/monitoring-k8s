apiVersion: v1
kind: Service
metadata:
  name: frontend-loki-backend01
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: loki-backend
spec:
  ports:
  - name: tcp01
    port: 3100
    protocol: TCP
    targetPort: 3100
  - name: tcp02
    port: 9095
    protocol: TCP
    targetPort: 9095
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: loki-backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: frontend-loki-backend01
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: loki-backend
spec:
  serviceName: "frontend-loki-backend01"
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/component: loki-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/component: loki-backend
    spec:
      containers:
      - args:
        - -config.file=/etc/loki/config-loki.yaml
        - -config.expand-env
        - -target=backend
        - -legacy-read-mode=false
        name: frontend-loki-backend01
        image: frontend-loki-app01
        imagePullPolicy: Always
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        ports:
        - containerPort: 3100
          name: tcp01
          protocol: TCP
        - containerPort: 9095
          name: tcp02
          protocol: TCP
        - containerPort: 7946
          name: tcp03
          protocol: TCP
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef: 
              name: kustomize-secret-minio
              key: minio_root_user
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kustomize-secret-minio
              key: minio_root_password
        volumeMounts:
        - mountPath: /etc/loki
          name: configmap-loki-config01
        - mountPath: /data/rules/fake
          name: configmap-loki-config04
        - mountPath: /data
          name: loki-backend
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      restartPolicy: Always
      terminationGracePeriodSeconds: 4800
      volumes:
      - name: configmap-loki-config01
        configMap:
          name: configmap-loki-config01
          defaultMode: 420
      - name: configmap-loki-config04
        configMap:
          name: configmap-loki-config04
          defaultMode: 420
  volumeClaimTemplates:
  - metadata:
      name: loki-backend
      annotations:
        longhorn.io/replica-count: "1"
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
      storageClassName: longhorn
