apiVersion: v1
kind: Service
metadata:
  name: frontend-grafana-app01
  labels:
    app.kubernetes.io/name: grafana
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
#  sessionAffinity: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-grafana-app01
  labels:
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - grafana
            topologyKey: "kubernetes.io/hostname"
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
      - name: frontend-grafana-app01
        image: frontend-grafana-app01
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "250Mi"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kustomize-secret
              key: password
        ports:
        - name: grafana
          containerPort: 3000
          protocol: TCP
        volumeMounts:
        - name: configmap-grafana-config01
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
      volumes:
      - name: configmap-grafana-config01
        configMap:
          name: configmap-grafana-config01