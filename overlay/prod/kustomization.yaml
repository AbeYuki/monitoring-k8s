apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: monitoring
resources:
  - ../../base/alertmanager
  - ../../base/blackbox-exporter
  - ../../base/grafana
  - ../../base/influxdb
  - ../../base/loki-backend
  - ../../base/loki-headless
  - ../../base/loki-read
  - ../../base/loki-write
  - ../../base/mimir
  - ../../base/minio-loki
  - ../../base/minio-mimir
  - ../../base/node-exporter
  - ../../base/process-exporter
  - ../../base/prometheus
  - ../../base/promtail
  - ../../base/rbac
  - ../../base/telegraf
  - secret-avp.yaml
  - secret-avp-minio.yaml
#  - secret-avp-minio-key.yaml
configMapGenerator:
- name: configmap-telegraf-config01
  files:
  - telegraf.conf
- name: configmap-grafana-config01
  files:
  - grafana.ini
- name: configmap-grafana-config03
  files:
  - config-datasource.yaml
- name: configmap-loki-config01
  files:
  - config-loki.yaml
- name: configmap-loki-config04
  files:
  - rules-loki.yaml
- name: configmap-prometheus-config01
  files:
  - config-prometheus.yaml
- name: configmap-prometheus-config02
  files:
  - rules-prometheus.yaml
- name: configmap-promtail-config01
  files:
  - config-promtail.yaml
- name: configmap-process-exporter-config01
  files:
  - config-process-exporter.yaml
- name: configmap-blackbox-exporter-config01
  files:
  - config-blackbox-exporter.yaml
- name: configmap-alertmanager-config01
  files:
  - config-alertmanager.yaml
- name: configmap-grafana-config02
  literals:
  - MARIADB_DATABASE=grafana
  - MARIADB_USER=grafana
- name: configmap-mimir-config01
  files:
  - config-mimir.yaml
- name: configmap-mimir-config02
  files:
  - rules-mimir.yaml
- name: configmap-influxdb-init01
  literals:
  - DOCKER_INFLUXDB_INIT_MODE=setup
  - DOCKER_INFLUXDB_INIT_USERNAME=monitoring
  - DOCKER_INFLUXDB_INIT_ORG=monitoring
  - DOCKER_INFLUXDB_INIT_BUCKET=monitoring
  - DOCKER_INFLUXDB_INIT_RETENTION=1w
  - INFLUX_HOST=http://monitoring-backend-influxdb-db01-001:8086
  - INFLUXD_SCRAPER_PROMETHEUS_ENABLED=true
  - INFLUXD_SCRAPER_PROMETHEUS_NAME=prometheus_scraper
  - INFLUXD_SCRAPER_PROMETHEUS_URL=http://monitoring-backend-prometheus-db01-001:9090
  - INFLUXD_SCRAPER_PROMETHEUS_BUCKET=monitoring
  - INFLUXD_SCRAPER_PROMETHEUS_INTERVAL=1m
  - INFLUXD_SCRAPER_PROMETHEUS_TIMEOUT=10s
- name: configmap-telegraf-config02
  literals:
  - host_etc="/rootfs/etc"
  - host_proc="/rootfs/proc" 
  - host_sys="/rootfs/sys"
  - host_var="/rootfs/var"
  - host_run="/rootfs/run"
  - host_mount_prefix="/rootfs"
transformers:
  - transformer-label.yaml
  - transformer-suffixprefix.yaml
images:
  - name: frontend-grafana-app01
    newName: grafana/grafana
    newTag: "11.1.1"
  - name: backend-grafana-db01
    newName: mariadb
    newTag: "10.5"
  - name: backend-influxdb-db01
    newName: influxdb
    newTag: "2.7.8"
  - name: backend-telegraf-agent01
    newName: telegraf
    newTag: "1.28.2"
  - name: frontend-loki-app01
    newName: grafana/loki
    newTag: "3.1.0"
  - name: backend-promtail-agent01
    newName: grafana/promtail
    newTag: "3.1.0"
  - name: backend-prometheus-db01
    newName: prom/prometheus
    newTag: "v2.36.2"
  - name: backend-node-exporter01
    newName: prom/node-exporter
    newTag: "v1.3.1"
  - name: backend-process-exporter01
    newName: ncabatoff/process-exporter
    newTag: "0.7.10"
  - name: bakend-blackbox-exporter01
    newName: prom/blackbox-exporter
    newTag: "v0.19.0"
  - name:  backend-alertmanager01
    newName: prom/alertmanager
    newTag: "v0.24.0"
  - name: minio-mimir-01
    newName: minio/minio
    newTag: RELEASE.2024-05-28T17-19-04Z
  - name: minio-loki-01
    newName: minio/minio
    newTag: RELEASE.2024-05-28T17-19-04Z
  - name: mimir-01
    newName: grafana/mimir
    newTag: "2.13.0"
patches:
### storage ###
  - target:
      version: v1
      kind: PersistentVolumeClaim
      name: backend-grafana-db01
    patch: |-
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: backend-grafana-db01
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 3Gi
        storageClassName: longhorn
  - target:
      version: v1
      kind: PersistentVolumeClaim
      name: backend-influxdb-db01
    patch: |-
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: backend-influxdb-db01
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: nfs
  - target:
      group: apps
      version: v1
      kind: StatefulSet
      name: frontend-loki-read01
    patch: |-
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: frontend-loki-read01
      spec:
        volumeClaimTemplates:
        - metadata:
            name: loki-read
          spec:
            accessModes: ["ReadWriteOnce"]
            storageClassName: nfs
            resources:
              requests:
                storage: 1Gi
  - target:
      group: apps
      version: v1
      kind: StatefulSet
      name: frontend-loki-write01
    patch: |-
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: frontend-loki-write01
      spec:
        volumeClaimTemplates:
        - metadata:
            name: loki-write
          spec:
            accessModes: ["ReadWriteOnce"]
            storageClassName: nfs
            resources:
              requests:
                storage: 10Gi
  - target:
      group: apps
      version: v1
      kind: StatefulSet
      name: frontend-loki-backend01
    patch: |-
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: frontend-loki-backend01
      spec:
        volumeClaimTemplates:
        - metadata:
            name: loki-backend
          spec:
            accessModes: ["ReadWriteOnce"]
            storageClassName: nfs
            resources:
              requests:
                storage: 1Gi
  - target:
      version: v1
      kind: PersistentVolumeClaim
      name: minio-mimir-01
    patch: |-
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: minio-mimir-01
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        storageClassName: nfs
  - target:
      version: v1
      kind: PersistentVolumeClaim
      name: minio-loki-01
    patch: |-
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: minio-loki-01
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: nfs
        resources:
          requests:
            storage: 50Gi
  - target:
      version: v1
      kind: PersistentVolumeClaim
      name: mimir-01-data
    patch: |-
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: mimir-01-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
        storageClassName: nfs
### reesources ###
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: frontend-grafana-app01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: frontend-grafana-app01
      spec:
        template:
          spec:
            containers:
            - name: frontend-grafana-app01
              resources:
                requests:
                  cpu: "150m"
                  memory: "250Mi"
                limits:
                  cpu: "1000m"
                  memory: "1Gi"
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: backend-grafana-db01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: backend-grafana-db01
      spec:
        template:
          spec:
            containers:
            - name: backend-grafana-db01
              resources:
                requests:
                  cpu: "100m"
                  memory: "200Mi"
                limits:
                  cpu: "500m"
                  memory: "500Mi"
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: backend-influxdb-db01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: backend-influxdb-db01
      spec:
        template:
          spec:
            containers:
            - name: backend-influxdb-db01
              resources:
                requests:
                  cpu: "100m"
                  memory: "200Mi"
                limits:
                  cpu: "1000m"
                  memory: "2Gi"
  - target:
      group: apps
      version: v1
      kind: StatefulSet
      name: frontend-loki-read01
    patch: |-
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: frontend-loki-read01
      spec:
        template:
          spec:
            containers:
            - name: frontend-loki-read01
              resources:
                requests:
                  cpu: "200m"
                  memory: "200Mi"
                limits:
                  cpu: "1000m"
                  memory: "1Gi"
  - target:
      group: apps
      version: v1
      kind: StatefulSet
      name: frontend-loki-write01
    patch: |-
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: frontend-loki-write01
      spec:
        template:
          spec:
            containers:
            - name: frontend-loki-write01
              resources:
                requests:
                  cpu: "200m"
                  memory: "200Mi"
                limits:
                  cpu: "1000m"
                  memory: "1Gi"
  - target:
      group: apps
      version: v1
      kind: StatefulSet
      name: frontend-loki-backend01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: frontend-loki-backend01
      spec:
        template:
          spec:
            containers:
            - name: frontend-loki-backend01
              resources:
                requests:
                  cpu: "200m"
                  memory: "200Mi"
                limits:
                  cpu: "1000m"
                  memory: "3Gi"
  - target:
      group: apps
      version: v1
      kind: DaemonSet
      name: backend-promtail-agent01
    patch: |-
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: backend-promtail-agent01
      spec:
        template:
          spec:
            containers:
            - name: backend-promtail-agent01
              resources:
                requests:
                  cpu: "100m"
                  memory: "100Mi"
                limits:
                  cpu: "800m"
                  memory: "800Mi"
  - target:
      group: apps
      version: v1
      kind: DaemonSet
      name: backend-telegraf-agent01
    patch: |-
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: backend-telegraf-agent01
      spec:
        template:
          spec:
            containers:
            - name: backend-telegraf-agent01
              resources:
                requests:
                  cpu: "50m"
                  memory: "64Mi"
                limits:
                  cpu: "800m"
                  memory: "800Mi"
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: backend-prometheus-db01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: backend-prometheus-db01
      spec:
        template:
          spec:
            containers:
            - name: backend-prometheus-db01
              resources:
                requests:
                  cpu: "100m"
                  memory: "1G"
                limits:
                  cpu: "1000m"
                  memory: "3Gi"
  - target:
      group: apps
      version: v1
      kind: DaemonSet
      name: backend-node-exporter01
    patch: |-
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: backend-node-exporter01
      spec:
        template:
          spec:
            containers:
              - name: backend-node-exporter01
                resources:
                  requests:
                    cpu: "100m"
                    memory: "100Mi"
                  limits:
                    cpu: "200m"
                    memory: "200Mi"
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: backend-alertmanager01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: backend-alertmanager01
      spec:
        template:
          spec:
            containers:
            - name:  backend-alertmanager01
              resources:
                requests:
                  cpu: "100m"
                  memory: "200Mi"
                limits:
                  cpu: "500m"
                  memory: "500Mi"
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: backend-blackbox-exporter01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: backend-blackbox-exporter01
      spec:
        template:
          spec:
            containers:
            - name: backend-blackbox-exporter01
              resources:
                requests:
                  cpu: "100m"
                  memory: "200Mi"
                limits:
                  cpu: "500m"
                  memory: "500Mi"
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: mimir-01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: mimir-01
      spec:
        template:
          spec:
            containers:
            - name: mimir-01
              resources:
                requests:
                  memory: "200Mi"
                  cpu: "200m"
                limits:
                  memory: "2Gi"
                  cpu: "1000m"
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: minio-loki-01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: minio-loki-01
      spec:
        template:
          spec:
            containers:
            - name: minio-loki-01
              resources:
                requests:
                  memory: "1Gi"
                  cpu: "200m"
                limits:
                  memory: "5Gi"
                  cpu: "1000m"
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: minio-mimir-01
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: minio-mimir-01
      spec:
        template:
          spec:
            containers:
            - name: minio-mimir-01
              resources:
                requests:
                  memory: "1Gi"
                  cpu: "200m"
                limits:
                  memory: "3.5Gi"
                  cpu: "1000m"
