global:
  scrape_interval: 60s
  evaluation_interval: 60s
alerting:
   alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "monitoring-backend-manager01-001:9093"
rule_files:
  - /mnt/prometheus/rules-prometheus.yaml
scrape_configs:
  - job_name: 'prometheus'
    static_configs:
    - targets:
        - "monitoring-backend-prometheus-db01-001:9090"
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  - job_name: 'cadvisor'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    metrics_path: /metrics/cadvisor
  - job_name: kubernetes-service-endpoints
    honor_timestamps: true
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    kubernetes_sd_configs:
      - role: endpoints
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_component]
        separator: ;
        regex: apiserver
        target_label: __scheme__
        replacement: https
        action: replace
      - source_labels:
          [__meta_kubernetes_service_label_kubernetes_io_cluster_service]
        separator: ;
        regex: "true"
        replacement: $1
        action: drop
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        separator: ;
        regex: "false"
        replacement: $1
        action: drop
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        separator: ;
        regex: .*-noscrape
        replacement: $1
        action: drop
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        separator: ;
        regex: ^(https?)$
        target_label: __scheme__
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        separator: ;
        regex: ^(.+)$
        target_label: __metrics_path__
        replacement: $1
        action: replace
      - source_labels:
          [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        separator: ;
        regex: ^(.+)(?::\d+);(\d+)$
        target_label: __address__
        replacement: $1:$2
        action: replace
      - separator: ;
        regex: ^__meta_kubernetes_service_label_(.+)$
        replacement: $1
        action: labelmap
      - source_labels: [__meta_kubernetes_namespace]
        separator: ;
        regex: (.*)
        target_label: namespace
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_name]
        separator: ;
        regex: (.*)
        target_label: pod_name
        replacement: $1
        action: replace
#  - job_name: "kubernetes-ingresses"
#    metrics_path: /probe
#    params:
#      module: [http_2xx]
#    kubernetes_sd_configs:
#      - role: ingress
#    relabel_configs:
#      - source_labels:
#          [
#            __meta_kubernetes_ingress_scheme,
#            __address__,
#            __meta_kubernetes_ingress_path,
#          ]
#        regex: (.+);(.+);(.+)
#        replacement: ${1}://${2}${3}
#        target_label: __param_target
#      - target_label: __address__
#        replacement: blackbox-exporter.example.com:9115
#      - source_labels: [__param_target]
#        target_label: instance
#      - action: labelmap
#        regex: __meta_kubernetes_ingress_label_(.+)
#      - source_labels: [__meta_kubernetes_namespace]
#        target_label: namespace
#      - source_labels: [__meta_kubernetes_ingress_name]
#        target_label: ingress
#  - job_name: "kubernetes-pods"
#    kubernetes_sd_configs:
#      - role: pod
#    relabel_configs:
#      - action: labelmap
#        regex: __meta_kubernetes_pod_label_(.+)
#      - source_labels: [__meta_kubernetes_namespace]
#        action: replace
#        target_label: namespace
#      - source_labels: [__meta_kubernetes_pod_name]
#        action: replace
#        target_label: pod