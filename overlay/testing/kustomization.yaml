apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: testing-monitoring
bases:
  - ../../base
configMapGenerator:
- name: configmap-telegraf-config01
  files:
  - telegraf.conf
- name: configmap-grafana-config01
  files:
  - grafana.ini
- name: configmap-loki-config01
  files:
  - config-loki.yaml
- name: configmap-loki-config02
  files:
  - rules-loki.yaml
- name: configmap-prometheus-config01
  files:
  - config-prometheus.yaml
- name: configmap-prometheus-config02
  files:
  - rules-prometheus.yaml
- name: configmap-promtail-config01
  files:
  - config-promtail.yaml
- name: configmap-process-exporter-config01
  files:
  - config-process-exporter.yaml
- name: configmap-blackbox-exporter-config01
  files:
  - config-blackbox-exporter.yaml
- name: configmap-alertmanager-config01
  files:
  - config-alertmanager.yaml
- name: configmap-grafana-config02
  literals:
  - MARIADB_DATABASE=grafana
  - MARIADB_USER=grafana
- name: configmap-influxdb-init01
  literals:
  - DOCKER_INFLUXDB_INIT_MODE=setup
  - DOCKER_INFLUXDB_INIT_USERNAME=monitoring
  - DOCKER_INFLUXDB_INIT_ORG=monitoring
  - DOCKER_INFLUXDB_INIT_BUCKET=monitoring
  - DOCKER_INFLUXDB_INIT_RETENTION=1w
  - INFLUX_HOST=http://${NAMESPACE}-backend-influxdb-db01-001:8086
  - INFLUX_HOST=http://testing-monitoring-backend-influxdb-db01-001:8086
  - INFLUXD_SCRAPER_PROMETHEUS_ENABLED=true
  - INFLUXD_SCRAPER_PROMETHEUS_NAME=prometheus_scraper
  - INFLUXD_SCRAPER_PROMETHEUS_URL=http://testing-monitoring-backend-prometheus-db01-001:9090
  - INFLUXD_SCRAPER_PROMETHEUS_BUCKET=monitoring
  - INFLUXD_SCRAPER_PROMETHEUS_INTERVAL=1m
  - INFLUXD_SCRAPER_PROMETHEUS_TIMEOUT=10s
- name: configmap-telegraf-config02
  literals:
  - host_etc="/rootfs/etc"
  - host_proc="/rootfs/proc" 
  - host_sys="/rootfs/sys"
  - host_var="/rootfs/var"
  - host_run="/rootfs/run"
  - host_mount_prefix="/rootfs"
transformers:
  - transformer-label.yaml
  - transformer-suffixprefix.yaml
images:
  - name: frontend-grafana-app01
    newName: grafana/grafana
    newTag: "10.0.1"
  - name: backend-grafana-db01
    newName: mariadb
    newTag: "10.5"
  - name: backend-influxdb-db01
    newName: influxdb
    newTag: "2.7.0"
  - name: backend-telegraf-agent01
    newName: telegraf
    newTag: "1.22.3"
  - name: frontend-loki-app01
    newName: grafana/loki
    newTag: "2.8.0"
  - name: backend-promtail-agent01
    newName: grafana/promtail
    newTag: "2.8.0"
  - name: backend-prometheus-db01
    newName: prom/prometheus
    newTag: "v2.36.2"
  - name: backend-node-exporter01
    newName: prom/node-exporter
    newTag: "v1.3.1"
  - name: bakend-process-exporter01
    newName: ncabatoff/process-exporter
    newTag: "0.7.10"
  - name: bakend-blackbox-exporter01
    newName: prom/blackbox-exporter
    newTag: "v0.19.0"
  - name:  backend-alertmanager01
    newName: prom/alertmanager
    newTag: "v0.24.0"
patchesStrategicMerge:
- |-
  apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: backend-grafana-db01
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 3Gi
    storageClassName: longhorn
- |-
  apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: backend-influxdb-db01
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
    storageClassName: longhorn
- |-
  apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: frontend-loki-app01
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 30Gi
    storageClassName: longhorn
- |-
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend-grafana-app01
  spec:
    template:
      spec:
        containers:
        - name: frontend-grafana-app01
          resources:
            requests:
              cpu: "150m"
              memory: "250Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
- |-
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: backend-grafana-db01
  spec:
    template:
      spec:
        containers:
        - name: backend-grafana-db01
          resources:
            requests:
              cpu: "100m"
              memory: "200Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
- |-
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: backend-influxdb-db01
  spec:
    template:
      spec:
        containers:
        - name: backend-influxdb-db01
          resources:
            requests:
              cpu: "100m"
              memory: "200Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
- |-
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend-loki-app01
  spec:
    template:
      spec:
        containers:
        - name: frontend-loki-app01
          resources:
            requests:
              cpu: "200m"
              memory: "200Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
- |-
  apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    name: backend-promtail-agent01
  spec:
    template:
      spec:
        containers:
        - name: backend-promtail-agent01
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "800m"
              memory: "800Mi"
- |-
  apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    name: backend-telegraf-agent01
  spec:
    template:
      spec:
        containers:
        - name: backend-telegraf-agent01
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "200m"
              memory: "125Mi"
- |-
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: backend-prometheus-db01
  spec:
    template:
      spec:
        containers:
        - name: backend-prometheus-db01
          resources:
            requests:
              cpu: "100m"
              memory: "200Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
- |-
  apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    name: backend-node-exporter01
  spec:
    template:
      spec:
        containers:
          - name: backend-node-exporter01
            resources:
              requests:
                cpu: "100m"
                memory: "100Mi"
              limits:
                cpu: "200m"
                memory: "200Mi"
- |-
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: backend-alertmanager01
  spec:
    template:
      spec:
        containers:
        - name:  backend-alertmanager01
          resources:
              requests:
                cpu: "100m"
                memory: "200Mi"
              limits:
                cpu: "500m"
                memory: "500Mi"